name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint-and-format:
    name: Lint and Format Check
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        cache: 'pip'
        
    - name: Install Ruff
      run: |
        python -m pip install --upgrade pip
        pip install ruff
        
    - name: Run Ruff checks
      run: |
        ruff check .
        ruff format --check .

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.13']
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'
        
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y python3-dev build-essential
        
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-asyncio
        
    - name: Run tests
      run: |
        pytest tests/ -v --cov=rl_ids --cov=api --cov-report=xml --cov-report=term
      env:
        PYTHONPATH: ${{ github.workspace }}
        
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage.xml
        flags: unittests
        name: codecov-umbrella
        fail_ci_if_error: false

  validate-package:
    name: Validate Package
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        cache: 'pip'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
        
    - name: Build package
      run: python -m build
      
    - name: Check package
      run: twine check dist/*
      
    - name: Test package installation
      run: |
        pip install dist/*.whl
        python -c "import rl_ids; print('Package import successful')"

  security-scan:
    name: Security Scan
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python 3.13
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        cache: 'pip'
        
    - name: Install dependencies for security scan
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install safety bandit[toml]
        
    - name: Run safety check for known vulnerabilities
      run: |
        echo "üîç Checking for known security vulnerabilities..."
        safety check --output json || echo "‚ö†Ô∏è Safety check completed with warnings"
        
    - name: Run bandit security analysis
      run: |
        echo "üîç Running static security analysis with bandit..."
        bandit -r rl_ids/ api/ -f json || echo "‚ö†Ô∏è Bandit scan completed with findings"
